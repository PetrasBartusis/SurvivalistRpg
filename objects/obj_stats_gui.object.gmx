<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fantasy_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the player's inventory's GUI
textBorder = 22;
myColor = c_black;

option[0] = "Strength";
option[1] = "Agility";
option[2] = "Dexterity";
option[3] = "Vitality";

// Menu index
menu_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up and down alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control inventory's depth
depth = -y - 2000;
//move inventory so the player can see it
if(instance_exists(obj_player)){
    x = view_xview[0];
    y = view_yview[0];
}

/// Control the menu
if(instance_exists(obj_input) and alarm[0] &lt;= 0){
    if(obj_input.down_key or obj_input.yaxis &gt; .5){
        if(menu_index &lt; array_length_1d(option) - 1){
            menu_index++;
        } else {
            menu_index = 0;
        }
        alarm[0] = room_speed/6;
    }
    
    if(obj_input.up_key or obj_input.yaxis &lt; -.5){
        if(menu_index &gt; 0){
            menu_index--;
        } else {
            menu_index = array_length_1d(option) - 1;
        }
        alarm[0] = room_speed/6;
    }
    
    if(obj_input.dash_key and obj_player_stats.status_points &gt; 0){
        switch(menu_index){
            case 0:
                obj_player_stats.Stats[STRENGTH] += 1;
                break;
            case 1:
                obj_player_stats.Stats[AGILITY] += 1;
                obj_player_stats.maxstamina += 2;
                break;
            case 2:
                obj_player_stats.Stats[DEXTERITY] += 1;
                
                break;
            case 3:
                obj_player_stats.Stats[VITALITY] += 1;
                obj_player_stats.maxhp += 2;
                break;
            default:
                break;
        }
        //reduce the amount of points
        obj_player_stats.status_points -= 1;
        //dont dash, after returning to the game
        obj_input.dash_key = false;
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the player stats on screen
draw_self();
//TODO: check if player exists
draw_set_colour(myColor);
draw_set_font(inventory_font);
draw_text(bbox_left + textBorder, bbox_top + textBorder, "Level: " + string(obj_player_stats.level));
draw_text(bbox_left + textBorder, bbox_top + textBorder + 20, "Stat points: " + string(obj_player_stats.status_points));

//draw_text(bbox_left + textBorder, bbox_left + textBorder + 20, option[0]);
offset = 50;

for(var i = 0; i &lt; array_length_1d(option); i++){
    draw_set_colour(c_black);
    if(i == menu_index) {
        draw_set_colour(c_white);
    }
    draw_text(bbox_left + textBorder, bbox_top + textBorder + offset, option[i] + " " + string(obj_player_stats.Stats[i]));
    offset += 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
